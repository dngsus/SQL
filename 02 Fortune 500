/* This project concerns a semi-fictional collection of large companies across industries.
I investigate and compare revenues between (groups of) companies. */

/* Overall takeaways:
    - Companies are split evenly above and below mean revenue, and this does not change when they are split into 'tech' or 'non-tech' firms.
    For both such groups though, smaller firms (< median headcount) have lower absolute revenues alongside higher per-head revenues.
    - Companies are distributed fairly evenly in terms of revenues, though mega-players do pull the mean up, skewing it above the median.

/* This project uses the following data: */

drop table if exists fortune_companies;

CREATE TABLE fortune_companies (
    company_id INTEGER PRIMARY KEY,
    company_name TEXT,
    industry TEXT,
    revenue REAL,
    employees INTEGER,
    healthcare_benefits BIT,
    paid_time_off_days INTEGER,
    maternity_leave_weeks INTEGER,
    avg_employee_tenure REAL
);

INSERT INTO fortune_companies (company_name, industry, revenue, employees, healthcare_benefits, paid_time_off_days, maternity_leave_weeks, avg_employee_tenure)
VALUES
    ('Apple Inc.', 'Technology', 365.7, 147000, 1, 20, 12, 4.5),
    ('Walmart Inc.', 'Retail', 523.96, 2200000, 1, 15, 8, 6.2),
    ('Exxon Mobil Corporation', 'Energy', 265.01, 72000, 0, 18, 6, 7.8),
    ('Amazon.com Inc.', 'Technology', 386.06, 1370000, 1, 22, 14, 5.1),
    ('JPMorgan Chase & Co.', 'Financials', 160.1, 255998, 1, 21, 12, 6.9),
    ('Verizon Communications Inc.', 'Telecommunications', 131.88, 132600, 0, 15, 6, 5.5),
    ('Company A', 'Retail', 235.4, 2000, 1, 18, 10, 5.8),
    ('Company B', 'Healthcare', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company C', 'Manufacturing', 300.2, 2000, 1, 18, 10, 5.8),
    ('Company D', 'Healthcare', 150.5, 3500, 1, 20, 12, 6.5),
    ('Company E', 'Finance', 280.7, 1800, 0, 14, 8, 4.2),
    ('Company F', 'Technology', 420.1, 2500, 1, 22, 14, 7.1),
    ('Company G', 'Retail', 190.8, 1500, 1, 16, 9, 5.3),
    ('Company H', 'Energy', 280.5, 2200, 0, 15, 8, 6.8),
    ('Company I', 'Telecommunications', 110.3, 1800, 1, 19, 11, 4.9),
    ('Company J', 'Manufacturing', 390.6, 2700, 1, 21, 13, 6.2),
    ('Company K', 'Healthcare', 180.2, 3200, 1, 17, 9, 7.4),
    ('Company L', 'Finance', 230.4, 1900, 0, 13, 7, 5.6),
    ('Company M', 'Technology', 340.9, 2800, 1, 23, 15, 6.9),
    ('Company N', 'Retail', 200.6, 1600, 1, 15, 8, 4.7),
    ('Company O', 'Energy', 260.2, 2400, 0, 14, 7, 6.1),
    ('Company P', 'Telecommunications', 130.5, 2100, 1, 20, 12, 5.3),
    ('Company Q', 'Manufacturing', 360.0, 2900, 1, 22, 14, 7.8),
    ('Company R', 'Technology', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company S', 'Retail', 210.8, 1600, 0, 16, 9, 4.9),
    ('Company T', 'Energy', 290.5, 2200, 1, 15, 8, 7.2),
    ('Company U', 'Telecommunications', 140.3, 1900, 1, 20, 12, 6.1),
    ('Company V', 'Manufacturing', 350.6, 2800, 1, 22, 14, 5.4),
    ('Company W', 'Healthcare', 160.2, 3300, 0, 18, 10, 4.8),
    ('Company X', 'Finance', 240.4, 2000, 1, 13, 7, 7.1),
    ('Company Y', 'Technology', 320.9, 2700, 1, 23, 15, 5.6),
    ('Company Z', 'Retail', 180.6, 1400, 0, 14, 8, 6.3),
    ('Company AA', 'Energy', 240.2, 2600, 1, 17, 9, 6.5),
    ('Company BB', 'Telecommunications', 120.5, 2100, 0, 19, 11, 4.5),
    ('Company CC', 'Manufacturing', 380.0, 3000, 1, 21, 13, 7.3),
    ('Company DD', 'Healthcare', 170.2, 3200, 1, 17, 9, 5.8),
    ('Company EE', 'Finance', 250.4, 1900, 0, 12, 6, 6.4),
    ('Company FF', 'Technology', 300.9, 2500, 1, 24, 16, 6.9),
    ('Company GG', 'Retail', 190.6, 1700, 0, 13, 7, 5.2),
    ('Company HH', 'Energy', 280.2, 2300, 1, 16, 9, 6.8),
    ('Company II', 'Telecommunications', 110.5, 2000, 1, 21, 12, 4.9),
    ('Company JJ', 'Manufacturing', 370.0, 3100, 1, 20, 12, 7.6),
    ('Company KK', 'Healthcare', 150.2, 3400, 0, 16, 8, 5.3);

/* The project proper: */

/* (1) Investigating revenue e.g. descriptive statistics, distribution in revenues of the population: */

/* (1.01) Initial descriptive statistics: */
    
SELECT round(min(revenue) ) min_rev,
       round(avg(revenue) ) mean_rev,
       round(max(revenue) ) max_rev
  FROM fortune_companies;

/* (1.02) Finding the median revenue value: */

SELECT round(AVG(revenue)) med_rev
FROM (SELECT revenue
      FROM fortune_companies
      ORDER BY revenue
      LIMIT 2 - (SELECT COUNT(*) FROM fortune_companies) % 2    -- odd count(*) has limit 1; even 2 (mean of middle two values)
      OFFSET (SELECT (COUNT(*) - 1) / 2
              FROM fortune_companies));
                          
/* (1.03) Finding values at quartiles: */

SELECT round(max(CASE WHEN rev_quart = 1 THEN revenue END)) Q1,
       round(max(CASE WHEN rev_quart = 2 THEN revenue END)) Med,
       round(max(CASE WHEN rev_quart = 3 THEN revenue END)) Q3,
       round(max(CASE WHEN rev_quart = 4 THEN revenue END)) Max
  FROM (
           SELECT revenue,
                  ntile(4) OVER (ORDER BY revenue) rev_quart
             FROM fortune_companies
            ORDER BY revenue
       );

/* (1.04) Investigating distribution of companies around the mean revenue value: */

SELECT count( * ),
       CASE
           WHEN revenue < (SELECT avg(revenue) FROM fortune_companies)
               THEN "Below mean rev"
           WHEN revenue >= (SELECT avg(revenue) FROM fortune_companies)
               THEN "Avg or above mean rev"
           END mean_rev_cat
  FROM fortune_companies
 GROUP BY 2;

/* (1.05) For the sake of practice, confirming companies are defined equally across quartiles: */

SELECT rev_quart,
       COUNT(*) no_in_quart
FROM (
    SELECT
        company_id,
        revenue,
        ntile(4) OVER (ORDER BY revenue) rev_quart
    FROM fortune_companies
    ORDER BY revenue
)
GROUP BY rev_quart
ORDER BY rev_quart;

/* Takeaways from (1):
    - Company revenues seem to be distributed fairly symmetrically around the mean,
    although the mean is pulled above the median due to notably high figures at the top end.
    
/* (2) Exploring similar statistics on a more constrained sample: */

/* (2.01) Categorising companies in 'tech' industries by their revenue: */

SELECT
  company_name,
  revenue,
  (SELECT round(avg(revenue),2) FROM fortune_companies) overall_avg_rev,
  CASE
    WHEN revenue < (SELECT avg(revenue) FROM fortune_companies) THEN 'Below avg rev'
    WHEN revenue >= (SELECT avg(revenue) FROM fortune_companies) THEN 'Avg or better rev'
  END rev_cat
FROM fortune_companies
GROUP BY 1
HAVING industry IN ('Technology', 'Telecommunications');

/* (2.02) Investigating distribution of tech companies as per their revenue categorisation */

select
  count(*),
  case
    when revenue < (select avg(revenue) from fortune_companies) then "Below mean rev"
    when revenue >= (select avg(revenue) from fortune_companies) then "Avg or above mean rev"
    end mean_rev_cat
from fortune_companies where industry IN ('Technology', 'Telecommunications')
group by 2;

/* (2.03) Categorising tech companies from (2.01) as per their revenue categorisation,
assuming under median employee headcount */

/* Preliminary: define median employee headcount: */
 
SELECT round(AVG(employees)) med_emp
FROM (SELECT employees
      FROM fortune_companies
      ORDER BY employees
      LIMIT 2 - (SELECT COUNT(*) FROM fortune_companies) % 2    -- odd count(*) has limit 1; even 2 (mean of middle two values)
      OFFSET (SELECT (COUNT(*) - 1) / 2
              FROM fortune_companies));
        
select
  company_name,
    round(revenue),
  (SELECT round(avg(revenue)) FROM fortune_companies) overall_avg_rev,
  employees,
  (SELECT round(AVG(employees))
FROM (SELECT employees
      FROM fortune_companies
      ORDER BY employees
      LIMIT 2 - (SELECT COUNT(*) FROM fortune_companies) % 2
      OFFSET (SELECT (COUNT(*) - 1) / 2
              FROM fortune_companies))) overall_avg_emp,
  case
    when revenue < (select avg(revenue) from fortune_companies) then "Below avg rev"
    when revenue >= (select avg(revenue) from fortune_companies) then "Avg or better rev"
    end as revenue_category
from fortune_companies
group by 1
having
  industry in ("Technology", "Telecommunications")
  and employees < (SELECT round(AVG(employees))
FROM (SELECT employees
      FROM fortune_companies
      ORDER BY employees
      LIMIT 2 - (SELECT COUNT(*) FROM fortune_companies) % 2
      OFFSET (SELECT (COUNT(*) - 1) / 2
              FROM fortune_companies)));
              
  
/* (2.04) Investigating distribution of tech companies from (2.03) as per their revenue categorisation */

select
  count(*),
  case
    when revenue < (select avg(revenue) from fortune_companies) then "Below mean rev"
    when revenue >= (select avg(revenue) from fortune_companies) then "Avg or above mean rev"
    end as mean_rev_cat
from fortune_companies where industry IN ('Technology', 'Telecommunications')
and employees < (SELECT round(AVG(employees))
FROM (SELECT employees
      FROM fortune_companies
      ORDER BY employees
      LIMIT 2 - (SELECT COUNT(*) FROM fortune_companies) % 2
      OFFSET (SELECT (COUNT(*) - 1) / 2
              FROM fortune_companies)))
group by 2;

/* Note: as 'tech' and 'non-tech' are collectively exhaustive,the distribution of non-tech companies may be deduced from our existing knowledge on the overall distribution and the tech distribution.
Regardless, queries to show this are below. */

/* (2.05) Investigating distribution of non-tech companies as per their revenue categorisation */

select
  count(*),
  case
    when revenue < (select avg(revenue) from fortune_companies) then "Below mean rev"
    when revenue >= (select avg(revenue) from fortune_companies) then "Avg or above mean rev"
    end mean_rev_cat
from fortune_companies where industry NOT IN ('Technology', 'Telecommunications')
group by 2;

/* (2.06) Investigating distribution of non-tech companies with fewer than average employees as per their revenue categorisation */

select
  count(*),
  case
    when revenue < (select avg(revenue) from fortune_companies) then "Below mean rev"
    when revenue >= (select avg(revenue) from fortune_companies) then "Avg or above mean rev"
    end as mean_rev_cat
from fortune_companies where industry NOT IN ('Technology', 'Telecommunications')
    and employees < (SELECT round(AVG(employees))
FROM (SELECT employees
      FROM fortune_companies
      ORDER BY employees
      LIMIT 2 - (SELECT COUNT(*) FROM fortune_companies) % 2
      OFFSET (SELECT (COUNT(*) - 1) / 2
              FROM fortune_companies)))
group by 2;

/* Takeaways from (2):
    - Even isolated into 'tech' and 'non-tech' groups, distribution is fairly even around the mean in terms of revenue.
    - Having less than median headcount does increase the likelihood of below mean revenue, especially for tech companies in the data.
    - Note: due to extreme high-values, majority of firms are below the mean in terms of employees.

/* (3) Comparing tech vs non-tech companies directly: */

/* (3.01) Comparing revenues across companies grouped by industry: */

SELECT CASE WHEN industry IN ("Technology", "Telecommunications") THEN "Tech" ELSE "Not Tech" END AS industry_category,
       round(sum(revenue)) revs,
       count( * ) num_companies,
       round(sum(revenue) / count( * )) industry_avg_rev,
       sum(employees) / 1000 industry_headcount_1000s,
       round(((sum(revenue) * 1000) / sum(employees)), 6) per_1000_head_rev
  FROM fortune_companies
 GROUP BY 1;
 
/* (3.02) Comparing revenues across companies grouped by industry, assuming below median headcount: */
 
SELECT CASE WHEN industry IN ("Technology", "Telecommunications") THEN "Tech" ELSE "Not Tech" END AS industry_category,
       round(sum(revenue)) revs,
       count( * ) num_companies,
       round(sum(revenue) / count( * )) industry_avg_rev,
       sum(employees) / 1000 industry_headcount_1000s,
       round(((sum(revenue) * 1000) / sum(employees)), 2) per_1000_head_rev
  FROM fortune_companies
  WHERE employees < (SELECT AVG(employees)
FROM (SELECT employees
      FROM fortune_companies
      ORDER BY employees
      LIMIT 2 - (SELECT COUNT(*) FROM fortune_companies) % 2
      OFFSET (SELECT (COUNT(*) - 1) / 2
              FROM fortune_companies)))
 GROUP BY 1;
 
/* (3.03) Revenue analysis of larger firms: */
 
SELECT CASE WHEN industry IN ("Technology", "Telecommunications") THEN "Tech" ELSE "Not Tech" END AS industry_category,
       round(sum(revenue)) revs,
       count( * ) num_companies,
       round(sum(revenue) / count( * )) industry_avg_rev,
       sum(employees) / 1000 industry_headcount_1000s,
       round(((sum(revenue) * 1000) / sum(employees)), 2) per_1000_head_rev
  FROM fortune_companies
  WHERE employees > (SELECT AVG(employees)
FROM (SELECT employees
      FROM fortune_companies
      ORDER BY employees
      LIMIT 2 - (SELECT COUNT(*) FROM fortune_companies) % 2
      OFFSET (SELECT (COUNT(*) - 1) / 2
              FROM fortune_companies)))
 GROUP BY 1;

/* Comments for (3):
    - Across industry categories, having less than median headcount does reduce both absolute/overall revenues, especialy for Tech companies.
    - Per head revenue, however, increses (a lot).
    - The opposite may be observed for companies above the median in headcount.
      */
