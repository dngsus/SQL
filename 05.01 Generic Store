/* Replicated from Project '05 Generic Store'. */

/* If error: "1st order by term out of range" - close window + reopen usually fixes. */

/* Items with questions/doubts: 13.02, 18.01, 18.02. */

/* (13) Number of customers with Feb orders involving >2 products at once, with their aggregated average spend on such transactions.
I.e. across these 278 customers, what was the average spend, only considering their orders involving quantity > 2? */

SELECT count(DISTINCT cust.acctnum),
       avg(quantity * price) 
  FROM febsales feb
       JOIN
       customers cust ON feb.orderid = cust.order_id
 WHERE quantity > 2 AND 
       length(orderid) = 6 AND 
       orderid <> 'Order ID';
       
/* (13.01) Number of Feb orders involving >2 products at once, with their aggregated average spend on such transactions.
I.e. across these 263 purchases (from 263 orders) involving quantity > 2, what was the average spend per purchase? --> Verification of (13) */

SELECT count(orderid),
       count(DISTINCT orderid),
       avg(price * quantity) 
  FROM febsales
 WHERE quantity > 2 AND 
       length(orderid) = 6 AND 
       orderid <> 'Order ID';
       
/* (13.02) Explaining discrepancy between (13) and (13.01): */
/* [...] */

/* (14) All transactions by customers from (13), i.e. also including any transactions they may have had with quantity <= 2: */

SELECT acctnum,
       orderid,
       price,
       quantity
  FROM customers cust
       JOIN
       febsales feb ON cust.order_id = feb.orderid
 WHERE acctnum IN (
           SELECT acctnum
             FROM BIT_DB.FebSales feb
                  JOIN
                  BIT_DB.customers cust ON feb.orderid = cust.order_id
            WHERE feb.Quantity > 2 AND 
                  length(orderid) = 6 AND 
                  orderid <> 'Order ID'
       );
   
/* (15) Number of customers from (13), with their aggregated average spend on all their Feb orders.
I.e. across these 278 customers, what was the average spend, including orders involving quantity <= 2? */

SELECT count(distinct acctnum),
       avg(price * quantity) 
  FROM customers cust
       JOIN
       febsales feb ON cust.order_id = feb.orderid
 WHERE acctnum IN (
           SELECT acctnum
             FROM FebSales feb
                  JOIN
                  customers cust ON feb.orderid = cust.order_id
            WHERE feb.Quantity > 2 AND 
                  length(orderid) = 6 AND 
                  orderid <> 'Order ID'
       );
       
/* (15.01) Number of orders associated with (13), alongside aggregated average spend in these transactions.
I.e. across 308 purchases (from 263 transactions), what was the average spend per purchase? --> Verification of (15) */

SELECT count(orderid),
       count(DISTINCT orderid),
       avg(price * quantity) 
  FROM customers cust
       JOIN
       febsales feb ON cust.order_id = feb.orderid
 WHERE acctnum IN (
           SELECT acctnum
             FROM FebSales feb
                  JOIN
                  customers cust ON feb.orderid = cust.order_id
            WHERE feb.Quantity > 2 AND 
                  length(orderid) = 6 AND 
                  orderid <> 'Order ID'
       );
       
/* (16) Customers who purchased total >2 products in Feb, be it across multiple orders or a singular 'large' order: */

SELECT acctnum,
       sum(quantity) their_orders
  FROM customers cust
       JOIN
       febsales feb ON cust.order_id = feb.orderid
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID'
 GROUP BY 1
HAVING their_orders > 2
 ORDER BY 2;

/* (17) Details of all transactions by customers in (16): */

WITH temp AS (
    SELECT acctnum,
           sum(quantity) their_orders
      FROM customers cust
           JOIN
           febsales feb ON cust.order_id = feb.orderid
     WHERE length(orderid) = 6 AND 
           orderid <> 'Order ID'
     GROUP BY 1
    HAVING their_orders > 2
     ORDER BY 2
)
SELECT acctnum,
       orderid,
       price,
       quantity,
       sum(quantity) OVER (PARTITION BY temp.acctnum) their_net_quantity
  FROM temp
       JOIN
       customers cust ON temp.acctnum = cust.acctnum
       JOIN
       febsales feb ON cust.order_id = feb.orderid
 ORDER BY 1;

/* (18) Number of customers in (16): */

SELECT count(acctnum)
  FROM customers cust 
 WHERE acctnum IN (
           SELECT acctnum
             FROM customers cust
                  JOIN
                  febsales feb ON cust.order_id = feb.orderid
            WHERE length(orderid) = 6 AND 
                  orderid <> 'Order ID'
            GROUP BY 1
           HAVING sum(quantity) > 2
       );

/* (18.01) Alternative: */
/* NOTE: NEED TO INVESTIGATE WHY 'DISTINCT' NECESSARY */
/*
WITH temp AS (
    SELECT acctnum,
           sum(quantity) their_orders
      FROM febsales feb
           JOIN
           customers cust ON feb.orderid = cust.order_id
     GROUP BY 1
)
SELECT count(distinct cust.acctnum)
     FROM temp
       JOIN
       customers cust ON temp.acctnum = cust.acctnum
       JOIN
       febsales feb ON feb.orderid = cust.order_id
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID'
       and their_orders > 2;
/*
/* (18.02) Alternative 2. Deliberately commented out to avoid slow run time upwards of 70 secs: */
/* NOTE: NEED TO INVESTIGATE WHY 'DISTINCT' NECESSARY */
/*
WITH temp AS (
    SELECT acctnum,
           sum(quantity) their_orders
      FROM febsales feb
           JOIN
           customers cust ON feb.orderid = cust.order_id
     GROUP BY 1
)
SELECT count(DISTINCT cust.acctnum) filter(where their_orders > 2)
  FROM temp
       JOIN
       customers cust ON temp.acctnum = cust.acctnum join febsales feb on cust.order_id =  feb.orderid
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID';
*/       

/* (19) Repeat of (16) alongside these customers' individual average spend (on purchases contributing to their individual tally of quantity >2 in Feb): */

SELECT acctnum,
       avg(quantity * price) 
  FROM customers cust
       JOIN
       febsales feb ON cust.order_id = feb.orderid
 WHERE acctnum IN (
           SELECT acctnum
             FROM customers cust
                  JOIN
                  febsales feb ON cust.order_id = feb.orderid
            WHERE length(orderid) = 6 AND 
                  orderid <> 'Order ID'
            GROUP BY 1
           HAVING sum(quantity) > 2
       )
 GROUP BY 1;
       
/* (19.01) Illustrative example to clarify (19) using sample of relevant customers: */

SELECT acctnum,
       orderid,
       product,
       quantity,
       price,
       avg(quantity * price) OVER (PARTITION BY acctnum) avg_spend_of_this_cust
  FROM customers cust
       JOIN
       febsales feb ON cust.order_id = feb.orderid
 WHERE acctnum IN (10060051, 10073854, 10604929, 10769476, 10805546, 10976666);
 
/* (20) Number of customers in (16), alongside their aggregated average spend on such purchases (contributing to their invidual tally of quantity >2 in Feb).
I.e. across 424 distinct customers, what was their average spend? */

SELECT count(distinct acctnum), avg(quantity * price)
  FROM customers cust join febsales feb on cust.order_id = feb.orderid
 WHERE acctnum IN (
           SELECT acctnum
             FROM customers cust
                  JOIN
                  febsales feb ON cust.order_id = feb.orderid
            WHERE length(orderid) = 6 AND 
                  orderid <> 'Order ID'
            GROUP BY 1
           HAVING sum(quantity) > 2
       );
       
/* (20.01) Number of orders associated with (16), alongside aggregated average spend in these transactions (which contributed towards customers' having individual tallies of quantity >2 in Feb).
I.e. across 690 purchases (from 322 transactions), what was the average spend per purchase? --> Verification of (20) */

SELECT count(orderid), count(distinct orderid), avg(quantity * price)
  FROM customers cust join febsales feb on cust.order_id = feb.orderid
 WHERE acctnum IN (
           SELECT acctnum
             FROM customers cust
                  JOIN
                  febsales feb ON cust.order_id = feb.orderid
            WHERE length(orderid) = 6 AND 
                  orderid <> 'Order ID'
            GROUP BY 1
           HAVING sum(quantity) > 2
       );
